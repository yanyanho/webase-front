package com.webank.webase.front.trade.polo;

import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;
import org.fisco.bcos.web3j.abi.EventEncoder;
import org.fisco.bcos.web3j.abi.FunctionEncoder;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.*;
import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.response.Log;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class TokenNetworkRegistry extends Contract {
    public static String BINARY = "6080604052600060065534801561001557600080fd5b5060405160a080614f37833981018060405260a081101561003557600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050506000841161007b57600080fd5b6000831161008857600080fd5b6000821161009557600080fd5b8282116100a157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156100db57600080fd5b6100ea856101a760201b60201c565b6100f357600080fd5b6000811161010057600080fd5b846000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360018190555082600281905550816003819055508060048190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050506101ba565b600080823b905060008111915050919050565b614d6e806101c96000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b0228f1e11610066578063b0228f1e14610209578063b61c408314610227578063b8378f7514610245578063cc2799c714610263578063d0ad4bec146102fb5761009e565b80630fabd9e7146100a3578063224df42f1461012757806323aa8174146101455780633af973b11461018f5780637709bc78146101ad575b600080fd5b6100e5600480360360208110156100b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610345565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61012f610378565b6040518082815260200191505060405180910390f35b61014d61037e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101976103a4565b6040518082815260200191505060405180910390f35b6101ef600480360360208110156101c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103aa565b604051808215151515815260200191505060405180910390f35b6102116103bd565b6040518082815260200191505060405180910390f35b61022f6103c3565b6040518082815260200191505060405180910390f35b61024d6103c9565b6040518082815260200191505060405180910390f35b6102b96004803603606081101561027957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506103cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610303610711565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600080823b905060008111915050919050565b60045481565b60065481565b60025481565b60006004546006541061044a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f72656769737472792066756c6c0000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104e257600080fd5b6001600654016006819055506000846000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600154600254600354600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16898960405161054d90610736565b808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200198505050505050505050604051809103906000f080158015610628573d6000803e3d6000fd5b50905080915081600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167ff11a7558a113d9627989c5edf26cbd19143b7375248e621c8e30ac9e0847dc3f60405160405180910390a3819150509392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6145ff806107448339019056fe60806040526000600860146101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405161010080620045ff83398101806040526101008110156200005057600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161415620000e257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156200011d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156200015857600080fd5b600086116200016657600080fd5b600085116200017457600080fd5b8484116200018157600080fd5b62000192886200038660201b60201c565b6200019c57600080fd5b620001ad876200038660201b60201c565b620001b757600080fd5b60008211620001c557600080fd5b60008111620001d357600080fd5b81811015620001e157600080fd5b876000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600281905550846003819055508360048190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631a39d8ef6040518163ffffffff1660e01b815260040160206040518083038186803b158015620002e157600080fd5b505afa158015620002f6573d6000803e3d6000fd5b505050506040513d60208110156200030d57600080fd5b8101908080519060200190929190505050116200032957600080fd5b82600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160058190555080600681905550505050505050505062000399565b600080823b905060008111915050919050565b61425680620003a96000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637c4734f41161011a578063b8378f75116100ad578063e5949b5d1161007c578063e5949b5d14611265578063ee4516d9146112bc578063fadc554b1461136c578063fc0c546a146114a3578063fe49ba1c146114ed576101fb565b8063b8378f7514610de9578063c73d16ae14610e07578063cb04e11414610f5e578063cea80f091461109e576101fb565b8063938bcd67116100e9578063938bcd6714610b985780639cadb15914610c105780639e67ca5f14610cbb578063b7506d7014610dc7576101fb565b80637c4734f41461084b57806382fd7795146108c3578063838d6e0514610a7e5780638723423714610b15576101fb565b80634845be7611610192578063679b376311610161578063679b37631461069057806371e75992146106ae5780637709bc78146106cc5780637bd13f0814610728576101fb565b80634845be761461059a578063524bef8a146105b85780635d6e441b146105fa57806363ea014314610618576101fb565b806323aa8174116101ce57806323aa8174146103af57806324d73a93146103f957806331d6a5ee146104435780633af973b11461057c576101fb565b806303d9d253146102005780630a798f24146103055780630fcc0c2814610387578063224df42f14610391575b600080fd5b6103036004803603608081101561021657600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561027d57600080fd5b82018360208201111561028f57600080fd5b803590602001918460018302840111640100000000831117156102b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061156f565b005b6103716004803603606081101561031b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118b5565b6040518082815260200191505060405180910390f35b61038f611b31565b005b610399611c12565b6040518082815260200191505060405180910390f35b6103b7611c18565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610401611c3e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61053a600480360360a081101561045957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001906401000000008111156104b457600080fd5b8201836020820111156104c657600080fd5b803590602001918460018302840111640100000000831117156104e857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611c64565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610584611d7e565b6040518082815260200191505060405180910390f35b6105a2611d84565b6040518082815260200191505060405180910390f35b6105e4600480360360208110156105ce57600080fd5b8101908080359060200190929190505050611d8a565b6040518082815260200191505060405180910390f35b610602611da2565b6040518082815260200191505060405180910390f35b61068e6004803603608081101561062e57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611da8565b005b61069861218d565b6040518082815260200191505060405180910390f35b6106b6612193565b6040518082815260200191505060405180910390f35b61070e600480360360208110156106e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121b7565b604051808215151515815260200191505060405180910390f35b610809600480360360a081101561073e57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561078357600080fd5b82018360208201111561079557600080fd5b803590602001918460018302840111640100000000831117156107b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506121ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108ad6004803603604081101561086157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122b5565b6040518082815260200191505060405180910390f35b610a7c60048036036101008110156108da57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561095f57600080fd5b82018360208201111561097157600080fd5b8035906020019184600183028401116401000000008311171561099357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156109f657600080fd5b820183602082011115610a0857600080fd5b80359060200191846001830284011164010000000083111715610a2a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506124c1565b005b610aea60048036036060811015610a9457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612769565b60405180838152602001826004811115610b0057fe5b60ff1681526020019250505060405180910390f35b610b1d61285c565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b5d578082015181840152602081019050610b42565b50505050905090810190601f168015610b8a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610bfa60048036036040811015610bae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612895565b6040518082815260200191505060405180910390f35b610cb96004803603610120811015610c2757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919050505061296e565b005b610dc5600480360360c0811015610cd157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610d2c57600080fd5b820183602082011115610d3e57600080fd5b80359060200191846001830284011164010000000083111715610d6057600080fd5b909192939192939080359060200190640100000000811115610d8157600080fd5b820183602082011115610d9357600080fd5b80359060200191846001830284011164010000000083111715610db557600080fd5b9091929391929390505050612fc4565b005b610dcf613448565b604051808215151515815260200191505060405180910390f35b610df161345b565b6040518082815260200191505060405180910390f35b610f0a60048036036080811015610e1d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610e8457600080fd5b820183602082011115610e9657600080fd5b80359060200191846001830284011164010000000083111715610eb857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050613461565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b611055600480360360a0811015610f7457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190640100000000811115610fcf57600080fd5b820183602082011115610fe157600080fd5b8035906020019184600183028401116401000000008311171561100357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050613475565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b611223600480360360e08110156110b457600080fd5b81019080803560ff169060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561110657600080fd5b82018360208201111561111857600080fd5b8035906020019184600183028401116401000000008311171561113a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561119d57600080fd5b8201836020820111156111af57600080fd5b803590602001918460018302840111640100000000831117156111d157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061358e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6112916004803603602081101561127b57600080fd5b81019080803590602001909291905050506136cd565b604051808381526020018260048111156112a757fe5b60ff1681526020019250505060405180910390f35b611328600480360360608110156112d257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506136fe565b604051808881526020018781526020018615151515815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b6114a1600480360361010081101561138357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561140857600080fd5b82018360208201111561141a57600080fd5b8035906020019184600183028401116401000000008311171561143c57600080fd5b90919293919293908035906020019064010000000081111561145d57600080fd5b82018360208201111561146f57600080fd5b8035906020019184600183028401116401000000008311171561149157600080fd5b90919293919293905050506137d3565b005b6114ab613c7d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6115596004803603606081101561150357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613ca2565b6040518082815260200191505060405180910390f35b6115798383612895565b84141561158557600080fd5b6000600481111561159257fe5b6009600086815260200190815260200160002060010160009054906101000a900460ff1660048111156115c157fe5b146115cb57600080fd5b60008060008060006115dc86613d7b565b80945081955050506115ef89888a613ca2565b94506000600b60008781526020019081526020016000209050806001015492508481600001541461161f57600080fd5b6000831161162c57600080fd5b6116368484613de7565b93508383039150600b6000878152602001908152602001600020600080820160009055600182016000905550508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168b7f8c03cf01b3d4e6068cc494e6fe02aa9e3d4af069d37c32ecc3b241af5c37e6c088888760405180848152602001838152602001828152602001935050505060405180910390a460008411156117b7576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bd9bbc68a866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001806020018281038252600081526020016020019350505050600060405180830381600087803b15801561179e57600080fd5b505af11580156117b2573d6000803e3d6000fd5b505050505b6000821115611895576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bd9bbc689846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001806020018281038252600081526020016020019350505050600060405180830381600087803b15801561187c57600080fd5b505af1158015611890573d6000803e3d6000fd5b505050505b8183101561189f57fe5b838310156118a957fe5b50505050505050505050565b6000801515600860149054906101000a900460ff161515146118d657600080fd5b816003548110156118e657600080fd5b6004548111156118f557600080fd5b6000806006546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3d670d7306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561199957600080fd5b505afa1580156119ad573d6000803e3d6000fd5b505050506040513d60208110156119c357600080fd5b8101908080519060200190929190505050106119de57600080fd5b600160076000828254019250508190555060075490506119fe87876122b5565b91506000600a60008481526020019081526020016000205414611a2057600080fd5b80600a60008481526020019081526020016000208190555060006009600083815260200190815260200160002090506000816000015414611a5d57fe5b60006004811115611a6a57fe5b8160010160009054906101000a900460ff166004811115611a8757fe5b14611a8e57fe5b85816000018190555060018160010160006101000a81548160ff02191690836004811115611ab857fe5b02179055508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16837f669a4b0ac0b9994c0f82ed4dbe07bb421fe74e5951725af4f139c7443ebf049d896040518082815260200191505060405180910390a4819450505050509392505050565b60001515600860149054906101000a900460ff16151514611b5157600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611bab57600080fd5b6001600860146101000a81548160ff0219169083151502179055507f6151930a846a85f5e64d2dd1cc5deeafb010c63eec4b600458158edd0e33f15d600860149054906101000a900460ff16604051808215151515815260200191505060405180910390a1565b60045481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060606040518060400160405280600381526020017f3230300000000000000000000000000000000000000000000000000000000000815250905060003060025460036006811115611cb357fe5b8a8a8a8a604051602001808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401838152602001828152602001975050505050505050604051602081830303815290604052805190602001209050611d718185613e00565b9250505095945050505050565b60025481565b60065481565b600a6020528060005260406000206000915090505481565b60055481565b60001515600860149054906101000a900460ff16151514611dc857600080fd5b8360016004811115611dd657fe5b6009600083815260200190815260200160002060010160009054906101000a900460ff166004811115611e0557fe5b14611e0f57600080fd5b611e198483612895565b8514611e2457600080fd5b60008311611e3157600080fd5b600554831115611e4057600080fd5b600080600060096000898152602001908152602001600020905060008160020160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260020160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905081600001548803945060008511611efa57600080fd5b87851115611f0757600080fd5b878583600001540114611f1657fe5b600654856000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3d670d7306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611fb857600080fd5b505afa158015611fcc573d6000803e3d6000fd5b505050506040513d6020811015611fe257600080fd5b8101908080519060200190929190505050011115611fff57600080fd5b87826000018190555080600001548260000154019350816000015484101561202657600080fd5b8873ffffffffffffffffffffffffffffffffffffffff168a7f2b55547a3b586ab51f65ee9ce4927fa6d25191388299988e89e059a02f9dd44584600001546040518082815260200191505060405180910390a36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e7d6113330886040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260008152602001602001945050505050600060405180830381600087803b15801561216957600080fd5b505af115801561217d573d6000803e3d6000fd5b5050505050505050505050505050565b60075481565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b600080823b905060008111915050919050565b600060606040518060400160405280600381526020017f323132000000000000000000000000000000000000000000000000000000000081525090506000306002546001600681111561221957fe5b8a8a8a8a604051602001808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018781526020018681526020018581526020018481526020018381526020018281526020019750505050505050506040516020818303038152906040528051906020012090506122a88185613e00565b9250505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156122f057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561232a57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561236357600080fd5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16101561242b578282604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401925050506040516020818303038152906040528051906020012090506124bb565b8183604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401925050506040516020818303038152906040528051906020012090505b92915050565b87600160048111156124cf57fe5b6009600083815260200190815260200160002060010160009054906101000a900460ff1660048111156124fe57fe5b1461250857600080fd5b6125128789612895565b891461251d57600080fd5b600080600960008c8152602001908152602001600020905060028160010160006101000a81548160ff0219169083600481111561255657fe5b021790555060018160020160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff02191690831515021790555043816000016000828254019250508190555060006125dc60018d8b8b8b8b8b61358e565b90508073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614612662576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806141956022913960400191505060405180910390fd5b600088111561270b576126788c8a8a8a8a6121ca565b92508273ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16146126fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806141b76024913960400191505060405180910390fd5b61270a82848a8c613f0d565b5b878a73ffffffffffffffffffffffffffffffffffffffff168d7f09d2f946e008c38931cd739dd20e35146deff8ab3134caee6d54fe50816a81b88c6040518082815260200191505060405180910390a4505050505050505050505050565b600080600080600060096000898152602001908152602001600020905060008160010160009054906101000a900460ff169050600060048111156127a957fe5b8160048111156127b557fe5b1480156127c25750600089115b80156127d057506007548911155b1561284657600390506127e4898989613ca2565b93506000600b600086815260200190815260200160002090506128088a898b613ca2565b93506000600b6000868152602001908152602001600020905060008260010154148015612839575060008160010154145b1561284357600492505b50505b8160000154819550955050505050935093915050565b6040518060400160405280601a81526020017f19457468657265756d205369676e6564204d6573736167653a0a00000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156128d057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561290a57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561294357600080fd5b600061294f84846122b5565b9050600a60008281526020019081526020016000205491505092915050565b6129788885612895565b89146129ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f6368616e6e656c5f6964656e74696669657220636865636b206661696c65642081525060200191505060405180910390fd5b60006129f889866122b5565b90506000600960008c8152602001908152602001600020905060026004811115612a1e57fe5b8160010160009054906101000a900460ff166004811115612a3b57fe5b14612aae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6368616e6e656c206d75737420626520636c6f7365210000000000000000000081525060200191505060405180910390fd5b43816000015410612b0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806141fc602f913960400191505060405180910390fd5b60008160020160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260020160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050612ba0828c8c8c613f7b565b612bf5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806141db6021913960400191505060405180910390fd5b612c0181888888613f7b565b612c56576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806141526021913960400191505060405180910390fd5b8260020160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff02191690556003820160009055600482016000905550508260020160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff0219169055600382016000905560048201600090555050600960008e81526020019081526020016000206000808201600090556001820160006101000a81549060ff02191690555050600a600085815260200190815260200160002060009055612d9c8d8d8a8d8d613ff5565b612da98d898e8989613ff5565b8c7f8db0e7d323ca765ce9ab550780131837e4942ccfea3be2b635ec1084c81f72628c8b8a896040518085815260200184815260200183815260200182815260200194505050505060405180910390a260008b1115612ed7576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bd9bbc68d8d6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001806020018281038252600081526020016020019350505050600060405180830381600087803b158015612ebe57600080fd5b505af1158015612ed2573d6000803e3d6000fd5b505050505b6000871115612fb5576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bd9bbc689896040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001806020018281038252600081526020016020019350505050600060405180830381600087803b158015612f9c57600080fd5b505af1158015612fb0573d6000803e3d6000fd5b505050505b50505050505050505050505050565b8760016004811115612fd257fe5b6009600083815260200190815260200160002060010160009054906101000a900460ff16600481111561300157fe5b1461300b57600080fd5b6000806000808a1161301c57600080fd5b88431061302857600080fd5b6130798c8c8c8c8c8c8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611c64565b73ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1614613119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f7061727469636970616e7420636865636b6f7574206661696c6564000000000081525060200191505060405180910390fd5b61316a8c8c8c8c8a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611c64565b90506131768b82612895565b8c146131cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806141736022913960400191505060405180910390fd5b6000600960008e8152602001908152602001600020905060008160020160008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806000015482600001540195508581600101548e01111561328e57600080fd5b80600101548d018d11156132a157600080fd5b81600101548d0394508c8511156132b757600080fd5b600085116132c457600080fd5b8c85836001015401146132d357fe5b8d73ffffffffffffffffffffffffffffffffffffffff168f7f98ed0357b86b313fa9f968de5c9d2bcf591432355b34aa1ab7e3e9e92f4284088f6040518082815260200191505060405180910390a38c82600101819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bd9bbc68f876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001806020018281038252600081526020016020019350505050600060405180830381600087803b1580156133e757600080fd5b505af11580156133fb573d6000803e3d6000fd5b50505050816000015486101561340d57fe5b806000015486101561341b57fe5b600082600401541461342957fe5b600081600401541461343757fe5b505050505050505050505050505050565b600860149054906101000a900460ff1681565b60035481565b600063c73d16ae60e01b9050949350505050565b60008060606040518060400160405280600381526020017f3230300000000000000000000000000000000000000000000000000000000000815250905030600254600360068111156134c357fe5b8a8a8a8a604051602001808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018381526020018281526020019750505050505050506040516020818303038152906040528051906020012091506135818285613e00565b9250509550959350505050565b600060606040518060400160405280600381526020017f323737000000000000000000000000000000000000000000000000000000000081525090506000306002548b60068111156135dc57fe5b8b8b8b8b8b604051602001808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140188815260200187815260200186815260200185815260200184815260200183815260200182805190602001908083835b60208310613670578051825260208201915060208101905060208303925061364d565b6001836020036101000a038019825116818451168082178552505050505050905001985050505050505050506040516020818303038152906040528051906020012090506136be8185613e00565b92505050979650505050505050565b60096020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b6000806000806000806000806000600960008d815260200190815260200160002060020160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061376c8c8c8c613ca2565b91506000600b60008481526020019081526020016000209050816000015482600101548360020160009054906101000a900460ff16846003015485600401548560000154866001015499509950995099509950995099505050509397509397509397909450565b6137dd8989612895565b8a146137e857600080fd5b6000801b8714156137f857600080fd5b6000861161380557600080fd5b6000806000600960008e815260200190815260200160002090506002600481111561382c57fe5b8160010160009054906101000a900460ff16600481111561384957fe5b146138bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6368616e6e656c20636c6f73656421212100000000000000000000000000000081525060200191505060405180910390fd5b4381600001541015613936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f736574746c6520626c6f636b5f6e756d6265722077726f6e672000000000000081525060200191505060405180910390fd5b6139ce60028e8c8c8c8c8c8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061358e565b92508273ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1614613a54576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806141b76024913960400191505060405180910390fd5b613aa58d8b8b8b8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506121ca565b91508173ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1614613b48576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f636c6f73696e675f7061727469636970616e7420636865636b206661696c656481525060200191505060405180910390fd5b60008160020160008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060020160009054906101000a900460ff16613c11576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f6e6f7420636c6f7365720000000000000000000000000000000000000000000081525060200191505060405180910390fd5b613c1d828e8c8e613f0d565b898d73ffffffffffffffffffffffffffffffffffffffff168f7f6fc5b4f4f9e65bfdc4c45456373906876cee8832b605478e281902468875eaed8e6040518082815260200191505060405180910390a45050505050505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415613cdd57600080fd5b838383604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140193505050506040516020818303038152906040528051906020012090509392505050565b600080600083519050600060608281613d9057fe5b0614613d9b57600080fd5b6000806000806000602094505b85851015613dcc57613dba8986614045565b92508284019350606085019450613da8565b88805190602001209050808497509750505050505050915091565b6000818311613df65782613df8565b815b905092915050565b60006041825114613e1057600080fd5b60008060006020850151925060408501519150606085015160001a9050601b8160ff161015613e4057601b810190505b601b8160ff161480613e555750601c8160ff16145b613e5e57600080fd5b60018682858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015613ebb573d6000803e3d6000fd5b505050602060405103519350600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415613f0157600080fd5b83935050505092915050565b60008460020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600401548311613f6257600080fd5b8281600401819055508181600301819055505050505050565b60008060001b8560030154148015613f935750600084145b8015613f9f5750600083145b15613fad5760019050613fed565b8383836040516020018084815260200183815260200182815260200193505050506040516020818303038152906040528051906020012085600301541490505b949350505050565b60008214156140035761403e565b6000614010868686613ca2565b90506000600b6000838152602001908152602001600020905082816000018190555083816001018190555050505b5050505050565b60008060008060008587511161406257600094505050505061414b565b858701519350602086018701519250604086018701519050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c1f62946826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156140ed57600080fd5b505afa158015614101573d6000803e3d6000fd5b505050506040513d602081101561411757600080fd5b8101908080519060200190929190505050915060008214806141395750818411155b1561414357600092505b829450505050505b9291505056fe7061727469636970616e74322062616c616e636520636865636b206661696c65646368616e6e656c5f6964656e74696669657220636865636b6f7574206661696c6564636c6f73696e675f7061727469636970616e7420636865636b206661696c656421206e6f6e5f636c6f73696e675f7061727469636970616e7420636865636b206661696c65647061727469636970616e74312062616c616e636520636865636b206661696c6564736574746c655f626c6f636b5f6e756d626572206d757374206c657373207468616e20626c6f636b206e756d626572a165627a7a723058204f39ccb8ad632e441cff663e913eac390e0556ec39dc52105087acf4ff7348970029a165627a7a723058208ce5da50ca2e24373cbff418c88e38686fbe17b4948943227e94a70767ac20500029";

    public static final String ABI = "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"token_to_token_networks\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settlement_timeout_max\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecation_executor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"chain_id\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"contract_address\",\"type\":\"address\"}],\"name\":\"contractExists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"max_token_networks\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_network_created\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settlement_timeout_min\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token_address\",\"type\":\"address\"},{\"name\":\"_channel_participant_deposit_limit\",\"type\":\"uint256\"},{\"name\":\"_token_network_deposit_limit\",\"type\":\"uint256\"}],\"name\":\"createERC20TokenNetwork\",\"outputs\":[{\"name\":\"token_network_address\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secret_registry_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_secret_registry_address\",\"type\":\"address\"},{\"name\":\"_chain_id\",\"type\":\"uint256\"},{\"name\":\"_settlement_timeout_min\",\"type\":\"uint256\"},{\"name\":\"_settlement_timeout_max\",\"type\":\"uint256\"},{\"name\":\"_max_token_networks\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"token_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"token_network_address\",\"type\":\"address\"}],\"name\":\"TokenNetworkCreated\",\"type\":\"event\"}]";

    public static final String FUNC_TOKEN_TO_TOKEN_NETWORKS = "token_to_token_networks";

    public static final String FUNC_SETTLEMENT_TIMEOUT_MAX = "settlement_timeout_max";

    public static final String FUNC_DEPRECATION_EXECUTOR = "deprecation_executor";

    public static final String FUNC_CHAIN_ID = "chain_id";

    public static final String FUNC_CONTRACTEXISTS = "contractExists";

    public static final String FUNC_MAX_TOKEN_NETWORKS = "max_token_networks";

    public static final String FUNC_TOKEN_NETWORK_CREATED = "token_network_created";

    public static final String FUNC_SETTLEMENT_TIMEOUT_MIN = "settlement_timeout_min";

    public static final String FUNC_CREATEERC20TOKENNETWORK = "createERC20TokenNetwork";

    public static final String FUNC_SECRET_REGISTRY_ADDRESS = "secret_registry_address";

    public static final Event TOKENNETWORKCREATED_EVENT = new Event("TokenNetworkCreated",
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    @Deprecated
    protected TokenNetworkRegistry(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected TokenNetworkRegistry(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected TokenNetworkRegistry(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected TokenNetworkRegistry(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<String> token_to_token_networks(String param0) {
        final Function function = new Function(FUNC_TOKEN_TO_TOKEN_NETWORKS,
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> settlement_timeout_max() {
        final Function function = new Function(FUNC_SETTLEMENT_TIMEOUT_MAX,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> deprecation_executor() {
        final Function function = new Function(FUNC_DEPRECATION_EXECUTOR,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> chain_id() {
        final Function function = new Function(FUNC_CHAIN_ID,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Boolean> contractExists(String contract_address) {
        final Function function = new Function(FUNC_CONTRACTEXISTS,
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(contract_address)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<BigInteger> max_token_networks() {
        final Function function = new Function(FUNC_MAX_TOKEN_NETWORKS,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> token_network_created() {
        final Function function = new Function(FUNC_TOKEN_NETWORK_CREATED,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> settlement_timeout_min() {
        final Function function = new Function(FUNC_SETTLEMENT_TIMEOUT_MIN,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> createERC20TokenNetwork(String _token_address, BigInteger _channel_participant_deposit_limit, BigInteger _token_network_deposit_limit) {
        final Function function = new Function(
                FUNC_CREATEERC20TOKENNETWORK,
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_token_address),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_channel_participant_deposit_limit),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_token_network_deposit_limit)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void createERC20TokenNetwork(String _token_address, BigInteger _channel_participant_deposit_limit, BigInteger _token_network_deposit_limit, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_CREATEERC20TOKENNETWORK,
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_token_address),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_channel_participant_deposit_limit),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_token_network_deposit_limit)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String createERC20TokenNetworkSeq(String _token_address, BigInteger _channel_participant_deposit_limit, BigInteger _token_network_deposit_limit) {
        final Function function = new Function(
                FUNC_CREATEERC20TOKENNETWORK,
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_token_address),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_channel_participant_deposit_limit),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_token_network_deposit_limit)),
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<String> secret_registry_address() {
        final Function function = new Function(FUNC_SECRET_REGISTRY_ADDRESS,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public List<TokenNetworkCreatedEventResponse> getTokenNetworkCreatedEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(TOKENNETWORKCREATED_EVENT, transactionReceipt);
        ArrayList<TokenNetworkCreatedEventResponse> responses = new ArrayList<TokenNetworkCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            TokenNetworkCreatedEventResponse typedResponse = new TokenNetworkCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.token_address = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.token_network_address = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void registerTokenNetworkCreatedEventLogFilter(String fromBlock, String toBlock, List<String> otherTopcs, EventLogPushWithDecodeCallback callback) {
        String topic0 = EventEncoder.encode(TOKENNETWORKCREATED_EVENT);
        registerEventLogPushFilter(ABI,BINARY,topic0,fromBlock,toBlock,otherTopcs,callback);
    }

    public void registerTokenNetworkCreatedEventLogFilter(EventLogPushWithDecodeCallback callback) {
        String topic0 = EventEncoder.encode(TOKENNETWORKCREATED_EVENT);
        registerEventLogPushFilter(ABI,BINARY,topic0,callback);
    }

    @Deprecated
    public static TokenNetworkRegistry load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new TokenNetworkRegistry(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static TokenNetworkRegistry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new TokenNetworkRegistry(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static TokenNetworkRegistry load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new TokenNetworkRegistry(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static TokenNetworkRegistry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new TokenNetworkRegistry(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<TokenNetworkRegistry> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _secret_registry_address, BigInteger _chain_id, BigInteger _settlement_timeout_min, BigInteger _settlement_timeout_max, BigInteger _max_token_networks) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_secret_registry_address),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_chain_id),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_settlement_timeout_min),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_settlement_timeout_max),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_max_token_networks)));
        return deployRemoteCall(TokenNetworkRegistry.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<TokenNetworkRegistry> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _secret_registry_address, BigInteger _chain_id, BigInteger _settlement_timeout_min, BigInteger _settlement_timeout_max, BigInteger _max_token_networks) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_secret_registry_address),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_chain_id),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_settlement_timeout_min),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_settlement_timeout_max),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_max_token_networks)));
        return deployRemoteCall(TokenNetworkRegistry.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<TokenNetworkRegistry> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _secret_registry_address, BigInteger _chain_id, BigInteger _settlement_timeout_min, BigInteger _settlement_timeout_max, BigInteger _max_token_networks) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_secret_registry_address),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_chain_id),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_settlement_timeout_min),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_settlement_timeout_max),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_max_token_networks)));
        return deployRemoteCall(TokenNetworkRegistry.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<TokenNetworkRegistry> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _secret_registry_address, BigInteger _chain_id, BigInteger _settlement_timeout_min, BigInteger _settlement_timeout_max, BigInteger _max_token_networks) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_secret_registry_address),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_chain_id),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_settlement_timeout_min),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_settlement_timeout_max),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_max_token_networks)));
        return deployRemoteCall(TokenNetworkRegistry.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class TokenNetworkCreatedEventResponse {
        public Log log;

        public String token_address;

        public String token_network_address;
    }
}
